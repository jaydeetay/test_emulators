dist: bionic
language: generic

# specify global envs and jobs
env:
  global:
    - ANDROID_TOOLS=4333796 # android-28
    - ANDROID_HOME=${HOME}/android-sdk
    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
    - JDK="1.8" # used while running sdkmanager, otherwise uses default JDK
    - FLUTTER_CHANNEL=stable
    - FLUTTER_VERSION=1.9.1+hotfix.6-${FLUTTER_CHANNEL}
    - FLUTTER_HOME=${HOME}/flutter
    - PATH=${HOME}/.pub-cache/bin:${PATH}
    - PATH=${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${PATH}
  jobs:
#  - SYS=25 ABI="google_apis;arm64-v8a"
  - SYS=25 ABI="google_apis;armeabi-v7a"
#  - SYS=24 ABI="google_apis;arm64-v8a"
#  - SYS=24 ABI="google_apis;armeabi-v7a"
#  - SYS=23 ABI="google_apis;armeabi-v7a"

#  - SYS=22 ABI="default;x86" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="default;x86_64" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;x86" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;x86_64" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;armeabi-v7a"
#  - SYS=22 ABI="default;armeabi-v7a"
#
#  - SYS=21 ABI="default;armeabi-v7a"
#  - SYS=20 ABI="default;armeabi-v7a"
#  - SYS=19 ABI="default;armeabi-v7a"
#  - SYS=18 ABI="default;armeabi-v7a"
#  - SYS=17 ABI="default;armeabi-v7a"
#  - SYS=16 ABI="default;armeabi-v7a"
#  - SYS=15 ABI="default;armeabi-v7a"
#  - SYS=14 ABI="default;armeabi-v7a"
#  - SYS=10 ABI="default;armeabi-v7a"

#jobs:
#  allow_failures:
#    - env: SYS=25 ABI="google_apis;arm64-v8a"
#    - env: SYS=24 ABI="google_apis;arm64-v8a"
#    - env: SYS=22 ABI="default;x86"
#    - env: SYS=22 ABI="default;x86_64"
#    - env: SYS=22 ABI="google_apis;x86"
#    - env: SYS=22 ABI="google_apis;x86_64"
#    - env: SYS=20 ABI="default;armeabi-v7a"
#    - env: SYS=14 ABI="default;armeabi-v7a"

before_install:
  - java -version

  # Set up KVM
  - sudo apt-get -y --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null
  # add travis user to groups
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm

  # Set up JDK 8 for Android SDK
  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - JDK="1.8"
  - source ~/.install-jdk-travis.sh

  # Install android tools
  - sudo apt-get -y --no-install-recommends install libpulse0 libxcursor1 # required by emulator
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  - sdkmanager "platforms;android-28" "build-tools;28.0.3"  > /dev/null # required by flutter
  # install older build tools (for emulator)
  - sdkmanager "platforms;android-25" "build-tools;25.0.2" > /dev/null
  - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null

  # Create and start emulator.
  - echo no | avdmanager create avd -n test -k "system-images;android-$SYS;$ABI"
#  - EMU_PARAMS="
#    -verbose
#    -no-snapshot
#    -no-window
#    -no-audio
#    -no-boot-anim
#    -camera-back none
#    -camera-front none
#    -selinux permissive
#    -qemu -m 2048"
  - EMU_PARAMS="
    -avd test
    -verbose
    -no-window
    -no-audio
    "
  - |
    if [[ "${SYS}${ABI}" == "25google_apis;armeabi-v7a" || "${SYS}${ABI}" == "24google_apis;armeabi-v7a" ]]; then
      EMU_PARAMS="${EMU_PARAMS} -gpu swiftshader"
    else
      EMU_PARAMS="${EMU_PARAMS} -gpu off"
    fi
  # use the absolute emulator path in case older version installed (on default path)
  - $ANDROID_HOME/emulator/emulator ${EMU_PARAMS} &

  # install flutter (while emulator is starting)
  - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
  - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz
  - tar xf flutter.tar.xz -C $(dirname ${FLUTTER_HOME})
  - rm flutter.tar.xz
  - flutter doctor -v

  # Switch back to our target JDK version to build and run tests
  - echo "Running test on JDK ${TARGET_JDK}"
  - JDK="${TARGET_JDK}"
  - source ~/.install-jdk-travis.sh

before_script:
  # Wait for emulator to startup.
  - ./scripts/android-wait-for-emulator.sh
  # unlock screen
#  - adb shell input keyevent 82

script:
#  - echo "Done."
  - cd flutter_app
  - flutter pub get
  - flutter driver