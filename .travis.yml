dist: bionic
language: generic

# specify global envs and jobs
env:
  global:
    - ANDROID_TOOLS=4333796 # android-28
    - ANDROID_HOME=${HOME}/android-sdk
    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
    - JDK="1.8" # used while running sdkmanager, otherwise uses default JDK
  jobs:
#  - SYS=25 ABI="google_apis;arm64-v8a"
  - SYS=25 ABI="google_apis;armeabi-v7a"
#  - SYS=24 ABI="google_apis;arm64-v8a"
#  - SYS=24 ABI="google_apis;armeabi-v7a"
#  - SYS=23 ABI="google_apis;armeabi-v7a"

#  - SYS=22 ABI="default;x86" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="default;x86_64" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;x86" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;x86_64" # demo failure due to no accelerator on travis
#  - SYS=22 ABI="google_apis;armeabi-v7a"
#  - SYS=22 ABI="default;armeabi-v7a"
#
#  - SYS=21 ABI="default;armeabi-v7a"
#  - SYS=20 ABI="default;armeabi-v7a"
#  - SYS=19 ABI="default;armeabi-v7a"
#  - SYS=18 ABI="default;armeabi-v7a"
#  - SYS=17 ABI="default;armeabi-v7a"
#  - SYS=16 ABI="default;armeabi-v7a"
#  - SYS=15 ABI="default;armeabi-v7a"
#  - SYS=14 ABI="default;armeabi-v7a"
#  - SYS=10 ABI="default;armeabi-v7a"

#jobs:
#  allow_failures:
#    - env: SYS=25 ABI="google_apis;arm64-v8a"
#    - env: SYS=24 ABI="google_apis;arm64-v8a"
#    - env: SYS=22 ABI="default;x86"
#    - env: SYS=22 ABI="default;x86_64"
#    - env: SYS=22 ABI="google_apis;x86"
#    - env: SYS=22 ABI="google_apis;x86_64"
#    - env: SYS=20 ABI="default;armeabi-v7a"
#    - env: SYS=14 ABI="default;armeabi-v7a"

before_install:
  - java -version

  # Set up JDK 8 for Android SDK
  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - JDK="1.8"
  - source ~/.install-jdk-travis.sh

  # Install android tools
  - sudo apt-get -y --no-install-recommends install libpulse0 libxcursor1 # required by emulator
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  # install older build tools (for emulator)
  - sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
  # Create and start emulator.
  - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
  - echo no | avdmanager create avd -n test -k "system-images;android-$SYS;$ABI"
  - EMU_PARAMS="
    -verbose
    -no-snapshot
    -no-window
    -no-audio
    -no-boot-anim
    -camera-back none
    -camera-front none
    -selinux permissive
    -qemu -m 2048"
  - |
    if [[ "${SYS}${ABI}" == "25google_apis;armeabi-v7a" || "${SYS}${ABI}" == "24google_apis;armeabi-v7a" ]]; then
      EMU_PARAMS="${EMU_PARAMS} -gpu swiftshader"
    else
      EMU_PARAMS="${EMU_PARAMS} -gpu off"
    fi
    # use the absolute emulator path in case older version installed (on default path)
    $ANDROID_HOME/emulator/emulator -verbose -avd test -no-audio ${EMU_PARAMS} &

  # Switch back to our target JDK version to build and run tests
  - JDK="${TARGET_JDK}"
  - source ~/.install-jdk-travis.sh

before_script:
  # Wait for emulator to startup.
  - ./scripts/android-wait-for-emulator.sh
  # unlock screen
#  - adb shell input keyevent 82

script:
  - echo "Done."
